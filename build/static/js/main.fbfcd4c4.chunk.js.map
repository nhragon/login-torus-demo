{"version":3,"sources":["App.js","index.js"],"names":["AUTH_DOMAIN","verifierMap","name","typeOfLogin","clientId","verifier","App","props","componentDidMount","a","torusdirectsdk","TorusSdk","baseUrl","window","location","origin","enableLogging","network","init","skipSw","setState","console","error","login","e","preventDefault","state","selectedVerifier","jwtParams","_loginToConnectionMap","triggerLogin","loginDetails","publicAddress","privateKey","data","signFx","toLowerCase","log","consoleText","JSON","stringify","address","timeStamp","Date","getTime","seed","key","Buffer","from","Util","sig","ecsign","hashPersonalMessage","toRpcSig","v","r","s","loginHint","domain","login_hint","verifierIdField","connection","isVerifierIdCaseSensitive","this","emailField","style","marginTop","type","value","onChange","target","placeholder","className","onSubmit","marginRight","Object","keys","map","toString","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbfcd4c4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport TorusSdk from \"@toruslabs/torus-direct-web-sdk\";\nimport Util from \"ethereumjs-util\";\n\nconst GOOGLE = \"google\";\nconst FACEBOOK = \"facebook\";\nconst REDDIT = \"reddit\";\nconst DISCORD = \"discord\";\nconst TWITCH = \"twitch\";\nconst GITHUB = \"github\";\nconst APPLE = \"apple\";\nconst LINKEDIN = \"linkedin\";\nconst TWITTER = \"twitter\";\nconst WEIBO = \"weibo\";\nconst LINE = \"line\";\nconst EMAIL_PASSWORD = \"email_password\";\nconst PASSWORDLESS = \"passwordless\";\nconst HOSTED_EMAIL_PASSWORDLESS = \"hosted_email_passwordless\";\nconst HOSTED_SMS_PASSWORDLESS = \"hosted_sms_passwordless\";\n\nconst AUTH_DOMAIN = \"https://torus-test.auth0.com\";\n\nconst verifierMap = {\n  [GOOGLE]: {\n    name: \"Google\",\n    typeOfLogin: \"google\",\n    clientId: \"221898609709-obfn3p63741l5333093430j3qeiinaa8.apps.googleusercontent.com\",\n    verifier: \"google-lrc\",\n  },\n  [FACEBOOK]: { name: \"Facebook\", typeOfLogin: \"facebook\", clientId: \"617201755556395\", verifier: \"facebook-lrc\" },\n  [REDDIT]: { name: \"Reddit\", typeOfLogin: \"reddit\", clientId: \"YNsv1YtA_o66fA\", verifier: \"torus-reddit-test\" },\n  [TWITCH]: { name: \"Twitch\", typeOfLogin: \"twitch\", clientId: \"f5and8beke76mzutmics0zu4gw10dj\", verifier: \"twitch-lrc\" },\n  [DISCORD]: { name: \"Discord\", typeOfLogin: \"discord\", clientId: \"682533837464666198\", verifier: \"discord-lrc\" },\n  [EMAIL_PASSWORD]: {\n    name: \"Email Password\",\n    typeOfLogin: \"email_password\",\n    clientId: \"sqKRBVSdwa4WLkaq419U7Bamlh5vK1H7\",\n    verifier: \"torus-auth0-email-password\",\n  },\n  [PASSWORDLESS]: {\n    name: \"Passwordless\",\n    typeOfLogin: \"passwordless\",\n    clientId: \"P7PJuBCXIHP41lcyty0NEb7Lgf7Zme8Q\",\n    verifier: \"torus-auth0-passwordless\",\n  },\n  [APPLE]: { name: \"Apple\", typeOfLogin: \"apple\", clientId: \"m1Q0gvDfOyZsJCZ3cucSQEe9XMvl9d9L\", verifier: \"torus-auth0-apple-lrc\" },\n  [GITHUB]: { name: \"Github\", typeOfLogin: \"github\", clientId: \"PC2a4tfNRvXbT48t89J5am0oFM21Nxff\", verifier: \"torus-auth0-github-lrc\" },\n  [LINKEDIN]: { name: \"Linkedin\", typeOfLogin: \"linkedin\", clientId: \"59YxSgx79Vl3Wi7tQUBqQTRTxWroTuoc\", verifier: \"torus-auth0-linkedin-lrc\" },\n  [TWITTER]: { name: \"Twitter\", typeOfLogin: \"twitter\", clientId: \"A7H8kkcmyFRlusJQ9dZiqBLraG2yWIsO\", verifier: \"torus-auth0-twitter-lrc\" },\n  [WEIBO]: { name: \"Weibo\", typeOfLogin: \"weibo\", clientId: \"dhFGlWQMoACOI5oS5A1jFglp772OAWr1\", verifier: \"torus-auth0-weibo-lrc\" },\n  [LINE]: { name: \"Line\", typeOfLogin: \"line\", clientId: \"WN8bOmXKNRH1Gs8k475glfBP5gDZr9H1\", verifier: \"torus-auth0-line-lrc\" },\n  [HOSTED_EMAIL_PASSWORDLESS]: {\n    name: \"Hosted Email Passwordless\",\n    typeOfLogin: \"jwt\",\n    clientId: \"P7PJuBCXIHP41lcyty0NEb7Lgf7Zme8Q\",\n    verifier: \"torus-auth0-passwordless\",\n  },\n  [HOSTED_SMS_PASSWORDLESS]: {\n    name: \"Hosted SMS Passwordless\",\n    typeOfLogin: \"jwt\",\n    clientId: \"nSYBFalV2b1MSg5b2raWqHl63tfH3KQa\",\n    verifier: \"torus-auth0-sms-passwordless\",\n  },\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedVerifier: GOOGLE, torusdirectsdk: null, loginHint: \"\", consoleText: \"\" };\n  }\n\n  componentDidMount = async () => {\n    try {\n      const torusdirectsdk = new TorusSdk({\n        baseUrl: `${window.location.origin}/serviceworker`,\n        enableLogging: true,\n        network: \"testnet\", // details for test net\n      });\n\n      await torusdirectsdk.init({ skipSw: false });\n\n      this.setState({ torusdirectsdk: torusdirectsdk });\n    } catch (error) {\n      console.error(error, \"mounted caught\");\n    }\n  };\n\n  login = async (e) => {\n    e.preventDefault();\n    const { selectedVerifier, torusdirectsdk } = this.state;\n\n    try {\n      const jwtParams = this._loginToConnectionMap()[selectedVerifier] || {};\n      const { typeOfLogin, clientId, verifier } = verifierMap[selectedVerifier];\n      const loginDetails = await torusdirectsdk.triggerLogin({\n        typeOfLogin,\n        verifier,\n        clientId,\n        jwtParams,\n      });\n\n      const { publicAddress, privateKey } = loginDetails;\n      const data = this.signFx(publicAddress.toLowerCase(), privateKey);\n\n      console.log(data)\n\n      this.setState({ consoleText: typeof loginDetails === \"object\" ? JSON.stringify(loginDetails) : loginDetails });\n    } catch (error) {\n      console.error(error, \"login caught\");\n    }\n  };\n\n  signFx = (address, privateKey) => {\n    console.log('signFx : ', address)\n    const timeStamp = new Date().getTime();\n    const seed = `${address}_${timeStamp}`;\n    console.log('seed : ', seed)\n\n    const key = Buffer.from(privateKey, 'hex');\n    console.log('key : ', key)\n    console.log('ethereumjs : ', Util)\n    const sig = Util.ecsign(Util.hashPersonalMessage(Buffer.from(seed)), key);\n    const sign = Util.toRpcSig(sig.v, sig.r, sig.s);\n    return {\n      \"address\": address,\n      \"sign\": sign,\n      \"timestamp\": timeStamp\n    }\n  }\n\n  _loginToConnectionMap = () => {\n    const { loginHint } = this.state;\n    return {\n      [EMAIL_PASSWORD]: { domain: AUTH_DOMAIN },\n      [PASSWORDLESS]: { domain: AUTH_DOMAIN, login_hint: loginHint },\n      [HOSTED_EMAIL_PASSWORDLESS]: { domain: AUTH_DOMAIN, verifierIdField: \"name\", connection: \"\", isVerifierIdCaseSensitive: false },\n      [HOSTED_SMS_PASSWORDLESS]: { domain: AUTH_DOMAIN, verifierIdField: \"name\", connection: \"\" },\n      [APPLE]: { domain: AUTH_DOMAIN },\n      [GITHUB]: { domain: AUTH_DOMAIN },\n      [LINKEDIN]: { domain: AUTH_DOMAIN },\n      [TWITTER]: { domain: AUTH_DOMAIN },\n      [WEIBO]: { domain: AUTH_DOMAIN },\n      [LINE]: { domain: AUTH_DOMAIN },\n    };\n  };\n\n  render() {\n    const { selectedVerifier, loginHint, consoleText } = this.state;\n    let emailField = \"\";\n\n    if (selectedVerifier === PASSWORDLESS) {\n      emailField = (\n        <div style={{ marginTop: \"20px\" }}>\n          <input type=\"email\" value={loginHint} onChange={(e) => this.setState({ loginHint: e.target.value })} placeholder=\"Enter your email\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <form onSubmit={this.login}>\n          <div>\n            <span style={{ marginRight: \"10px\" }}>Verifier:</span>\n            <select value={selectedVerifier} onChange={(e) => this.setState({ selectedVerifier: e.target.value })}>\n              {Object.keys(verifierMap).map((login) => (\n                <option value={login} key={login.toString()}>\n                  {verifierMap[login].name}\n                </option>\n              ))}\n            </select>\n          </div>\n          {emailField}\n          <div style={{ marginTop: \"20px\" }}>\n            <button>Login with Torus</button>\n          </div>\n        </form>\n        <div className=\"console\">\n          <p>{consoleText}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}